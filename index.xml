<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Marcelo Sousa</title>
    <link>https://marcelosousa.net/</link>
    <description>Recent content on Marcelo Sousa</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Marcelo Sousa {year}</copyright>
    <lastBuildDate>Mon, 30 Sep 2019 18:50:14 +0200</lastBuildDate>
    
	    <atom:link href="https://marcelosousa.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Program Analysis for Developers: Part I</title>
      <link>https://marcelosousa.net/post/program-analysis-for-developers-part-i/</link>
      <pubDate>Mon, 30 Sep 2019 18:50:14 +0200</pubDate>
      
      <guid>https://marcelosousa.net/post/program-analysis-for-developers-part-i/</guid>
      <description>&lt;p&gt;The vast majority of developers have heard about program analysis techniques but often don’t have a good intuition about how these techniques work. In this series of articles, I will provide a brief overview of the major techniques and hopefully clarify some of their capabilities and limitations.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check out the full article on &lt;a href=&#34;https://medium.com/swlh/program-analysis-for-developers-part-i-615cd1ee9526&#34; target=&#34;_blank&#34;&gt;Medium&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>(Hidden) Inequality among Programmers</title>
      <link>https://marcelosousa.net/post/hidden-inequality-programmers/</link>
      <pubDate>Wed, 18 Sep 2019 18:47:09 +0200</pubDate>
      
      <guid>https://marcelosousa.net/post/hidden-inequality-programmers/</guid>
      <description>&lt;p&gt;&lt;em&gt;Code is eating the world&lt;/em&gt; — we have heard it a hundred times. Programmers are the ones producing this code, so a logical question is: &lt;em&gt;what is happening to them?&lt;/em&gt; As usual, the answer depends on the subject but I will argue that &lt;strong&gt;some are getting fat while most are starting to starve&lt;/strong&gt;. I don’t mean physical starvation because they don’t have money to buy food — I’m talking about intellectual starvation in the style of the famous &lt;a href=&#34;https://en.wikipedia.org/wiki/Buridan%27s_ass&#34; target=&#34;_blank&#34;&gt;Buridan’s ass&lt;/a&gt; paradox.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check out the full article on &lt;a href=&#34;https://medium.com/@marceloabsousa/hidden-inequality-among-programmers-2e95c3cb0a25&#34; target=&#34;_blank&#34;&gt;Medium&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Software Development Is Complex Communication</title>
      <link>https://marcelosousa.net/post/software-development-is-complex-communication/</link>
      <pubDate>Thu, 12 Sep 2019 18:18:36 +0200</pubDate>
      
      <guid>https://marcelosousa.net/post/software-development-is-complex-communication/</guid>
      <description>&lt;p&gt;Behind every piece of code produced by a human is an intention. The intention should answer the question: &lt;em&gt;why should this code exist&lt;/em&gt;? Fundamentally, the quality of code is related to this intention. For example, saying that you have written an elegant piece of code without stating the intention of that code is non-sensical.&lt;/p&gt;

&lt;p&gt;Software developers usually call this intention &lt;strong&gt;specification&lt;/strong&gt;. All software should start from an &lt;strong&gt;informal specification&lt;/strong&gt;, a representation of some intention that is shared by a group of people. I say &lt;em&gt;should&lt;/em&gt; because sometimes, developers are too eager to start coding without a clue of what the intention really is. This can be because these informal specifications are not clear enough to be communicated or because the communication between team members is not effective.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check out the full article on &lt;a href=&#34;https://medium.com/@marceloabsousa/software-development-is-complex-communication-ca43c01c98a1&#34; target=&#34;_blank&#34;&gt;Medium&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Async Magical Realism in Computing</title>
      <link>https://marcelosousa.net/post/async-magical-realism-in-computing/</link>
      <pubDate>Mon, 02 Sep 2019 18:18:24 +0200</pubDate>
      
      <guid>https://marcelosousa.net/post/async-magical-realism-in-computing/</guid>
      <description>&lt;p&gt;We are living in the era of the &lt;strong&gt;asynchronous&lt;/strong&gt; — the promise land of everything will work out or will go terribly wrong &lt;em&gt;but not just yet so keep on pushing&lt;/em&gt;.
This movement has not only infiltrated our machines and how they run software but also our collaborations in extreme ways.&lt;/p&gt;

&lt;p&gt;Every time I think of &lt;em&gt;async&lt;/em&gt;, the epitome of &lt;em&gt;asynchronous processes&lt;/em&gt;, I remember this &lt;a href=&#34;https://youtu.be/nBn3BkXrv-E?t=53&#34; target=&#34;_blank&#34;&gt;unfortunate scene&lt;/a&gt; of the TV show Narcos about &lt;em&gt;magical realism&lt;/em&gt;.
Magical realism is a style of fiction popularised by Gabriel García Márquez that combines a genuine realistic description of the world with magical elements. I also remember every time I had to communicate with some governmental body or giant corporation and the stress of not knowing if and when you will hear from them.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check out the full article on &lt;a href=&#34;https://medium.com/@marceloabsousa/async-magical-realism-in-computing-6676f6798e72&#34; target=&#34;_blank&#34;&gt;Medium&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Agile: The Pope at the Dark Ages of Software Development</title>
      <link>https://marcelosousa.net/post/the-religion-of-agile/</link>
      <pubDate>Mon, 26 Aug 2019 18:18:11 +0200</pubDate>
      
      <guid>https://marcelosousa.net/post/the-religion-of-agile/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Agile&lt;/strong&gt;, the software development methodology turned into a religion, is built on the fallacy that the complexity inherent in the fuzzy collective intelligence of a group of people, a.k.a. thin air, can be broken up into clearly defined simple tasks.&lt;/p&gt;

&lt;p&gt;It is a brilliant business strategy as it shifts the error rate from the client side into the process itself. We have fewer unhappy clients because they are now a part of that collective intelligence. &lt;em&gt;What happens if the whole thing blows up&lt;/em&gt;? Well, the process can’t be blamed; remember that the client is never wrong. So the blame is shifted to some stakeholders and they are usually software developers. Their way of coping with this social phenomenon was to focus on the speed of execution and the creation of a myth: the 10x engineer.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check out the full article on &lt;a href=&#34;https://medium.com/swlh/the-religion-of-agile-2e739c0dee71&#34; target=&#34;_blank&#34;&gt;Medium&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bug Bounty Summer 2019</title>
      <link>https://marcelosousa.net/post/bug-bounty/</link>
      <pubDate>Wed, 07 Aug 2019 20:35:09 +0200</pubDate>
      
      <guid>https://marcelosousa.net/post/bug-bounty/</guid>
      <description>&lt;p&gt;There is an increasing trend to use bug bounty programs to complement &amp;ldquo;certified&amp;rdquo; security. Some exciting news from this summer include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The Digital Defense Service finds bug bounty programs more cost-effective than hiring &amp;ldquo;security&amp;rdquo; companies for penetration testing (&lt;a href=&#34;https://www.cnet.com/news/how-the-air-force-relied-on-hackers-to-secure-its-move-to-the-cloud/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;). Truth is that hackers found 46 vulnerabilities after security auditors gave the all clear!&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Microsoft shared this week at Black Hat that it has given $4.4 million in bounty rewards over the past 12 months. The top Azure bug bounty is now at $40,000 (&lt;a href=&#34;https://venturebeat.com/2019/08/05/microsoft-launches-azure-security-lab-doubles-top-bug-bounty-to-40000/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;). Excited to look more into the Azure Security Lab!&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Google has also increased the value of bug bounties  recently (&lt;a href=&#34;https://www.cnet.com/news/google-will-now-pay-up-to-30000-for-reporting-a-chrome-bug/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In Jan 2019, the European Union launched a bug bounty program on popular open source software with a pool of ~$1M (&lt;a href=&#34;https://www.welivesecurity.com/2019/01/07/eu-bounty-bugs-open-source-software/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;According to HackerOne, Paypal has spent $1,411,230 in their bug bounty program launched on Aug 2018 (&lt;a href=&#34;https://hackerone.com/paypal&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Million Dollar Idea (Github Repository)</title>
      <link>https://marcelosousa.net/project/million-dollar/</link>
      <pubDate>Wed, 07 Aug 2019 17:51:29 +0200</pubDate>
      
      <guid>https://marcelosousa.net/project/million-dollar/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Data Scope</title>
      <link>https://marcelosousa.net/project/big-data/</link>
      <pubDate>Wed, 07 Aug 2019 17:47:27 +0200</pubDate>
      
      <guid>https://marcelosousa.net/project/big-data/</guid>
      <description>&lt;p&gt;Information is now the most valuable commodity in the global economy surpassing oil. As individuals, we can access data pools (through Google, Facebook, Amazon, etc.) but are quite clueless to what portion of the pool we are actually allowed to view and influence.
Besides the fact that this data is being used for targeted ads and privacy violations, we need to start building tools that understand how much information related to a topic we have access to.
I believe this is of the upmost importance since it directly impacts core cognitive processes in human development.
I am working on tools that improve data filtering  so that not only they are exposed to reliable information but they can also understand how to progress in their learning. &lt;strong&gt;More details to follow soon!&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Code Analysis</title>
      <link>https://marcelosousa.net/project/code-analysis/</link>
      <pubDate>Wed, 07 Aug 2019 17:01:50 +0200</pubDate>
      
      <guid>https://marcelosousa.net/project/code-analysis/</guid>
      <description>&lt;p&gt;The importance of bug-free and maintainable software will continue to increase in the upcoming decades hand-in-hand with the growth in number of developers.
It is very likely that by 2050, every single person under 35 years old will have the ability to modify software components that directly impact their well-being and the ones in their family nucleus.
Providing the new generations of programmers with the right toolkit is imperative.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m actively working on the combination of state-of-the-art research in mathematical logic, software analysis and technologies to build tools that understand code at the global scale (think all code snippets available online).
Practically, my goal is that these tools become indispensable to developers on a daily basis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For more information, check &lt;a href=&#34;https://explore.dev&#34; target=&#34;_blank&#34;&gt;explore.dev&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Verified Tree-Way Program Merge</title>
      <link>https://marcelosousa.net/talk/verified-3way-merge/</link>
      <pubDate>Fri, 09 Nov 2018 13:30:00 -0500</pubDate>
      
      <guid>https://marcelosousa.net/talk/verified-3way-merge/</guid>
      <description>&lt;p&gt;Even though many programmers rely on 3-way merge tools to integrate changes from different branches, such tools can introduce subtle bugs in the integration process. This paper aims to mitigate this problem by defining a semantic notion of conflict-freedom, which ensures that the merged program does not introduce new unwanted behaviors. We also show how to verify this property using a novel, compositional algorithm that combines lightweight summarization for shared program fragments with precise relational reasoning for the modifications. Towards this goal, our method uses a 4-way differencing algorithm on abstract syntax trees to represent different program versions as edits applied to a shared program with holes. This representation allows our verification algorithm to reason about different edits in isolation and compose them to obtain an overall proof of conflict freedom. We have implemented the proposed technique in a new tool called SafeMerge and evaluate it on 52 real-world merge scenarios obtained from Github. The experimental results demonstrate the benefits of our approach over syntactic conflict-freedom and indicate that SafeMerge is both precise and practical.&lt;/p&gt;

&lt;p&gt;Joint-work with Isil Dillig and Shuvendu Lahiri.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
