<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Marcelo Sousa</title>
    <link>https://marcelosousa.net/</link>
    <description>Recent content on Marcelo Sousa</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Marcelo Sousa {year}</copyright>
    <lastBuildDate>Wed, 07 Aug 2019 20:35:09 +0200</lastBuildDate>
    
	    <atom:link href="https://marcelosousa.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bug Bounty Summer 2019</title>
      <link>https://marcelosousa.net/post/bug-bounty/</link>
      <pubDate>Wed, 07 Aug 2019 20:35:09 +0200</pubDate>
      
      <guid>https://marcelosousa.net/post/bug-bounty/</guid>
      <description>&lt;p&gt;There is an increasing trend to use bug bounty programs to complement &amp;ldquo;certified&amp;rdquo; security. Some exciting news from this summer include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The Digital Defense Service finds bug bounty programs more cost-effective than hiring &amp;ldquo;security&amp;rdquo; companies for penetration testing (&lt;a href=&#34;https://www.cnet.com/news/how-the-air-force-relied-on-hackers-to-secure-its-move-to-the-cloud/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;). Truth is that hackers found 46 vulnerabilities after security auditors gave the all clear!&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Microsoft shared this week at Black Hat that it has given $4.4 million in bounty rewards over the past 12 months. The top Azure bug bounty is now at $40,000 (&lt;a href=&#34;https://venturebeat.com/2019/08/05/microsoft-launches-azure-security-lab-doubles-top-bug-bounty-to-40000/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;). Excited to look more into the Azure Security Lab!&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Google has also increased the value of bug bounties  recently (&lt;a href=&#34;https://www.cnet.com/news/google-will-now-pay-up-to-30000-for-reporting-a-chrome-bug/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In Jan 2019, the European Union launched a bug bounty program on popular open source software with a pool of ~$1M (&lt;a href=&#34;https://www.welivesecurity.com/2019/01/07/eu-bounty-bugs-open-source-software/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;According to HackerOne, Paypal has spent $1,411,230 in their bug bounty program launched on Aug 2018 (&lt;a href=&#34;https://hackerone.com/paypal&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Million Dollar</title>
      <link>https://marcelosousa.net/project/million-dollar/</link>
      <pubDate>Wed, 07 Aug 2019 17:51:29 +0200</pubDate>
      
      <guid>https://marcelosousa.net/project/million-dollar/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Data Scope</title>
      <link>https://marcelosousa.net/project/big-data/</link>
      <pubDate>Wed, 07 Aug 2019 17:47:27 +0200</pubDate>
      
      <guid>https://marcelosousa.net/project/big-data/</guid>
      <description>&lt;p&gt;Information is now the most valuable commodity in the global economy surpassing oil. As individuals, we can access data pools (through Google, Facebook, Amazon, etc.) but are quite clueless to what portion of the pool we are actually allowed to view and influence.
Besides the fact that this data is being used for targeted ads and privacy violations, we need to start building tools that understand how much information related to a topic we have access to.
I believe this is of the upmost importance since it directly impacts core cognitive processes in human development.
I am working on tools that improve data filtering  so that not only they are exposed to reliable information but they can also understand how to progress in their learning. &lt;strong&gt;More details to follow soon!&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Code Analysis</title>
      <link>https://marcelosousa.net/project/code-analysis/</link>
      <pubDate>Wed, 07 Aug 2019 17:01:50 +0200</pubDate>
      
      <guid>https://marcelosousa.net/project/code-analysis/</guid>
      <description>&lt;p&gt;The importance of bug-free and maintainable software will continue to increase in the upcoming decades hand-in-hand with the growth in number of developers.
It is very likely that by 2050, every single person under 35 years old will have the ability to modify software components that directly impact their well-being and the ones in their family nucleus.
Providing the new generations of programmers with the right toolkit is imperative.
I&amp;rsquo;m actively working on the combination of state-of-the-art research in mathematical logic, software analysis and technologies to build tools that understand code at the global scale (think all code snippets available online).
Practically, my goal is that these tools become indispensable to developers on a daily basis.&lt;/p&gt;

&lt;p&gt;I am currently working on a new application called &lt;em&gt;explore.dev&lt;/em&gt;. &lt;strong&gt;More details to follow soon!&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Verified Tree-Way Program Merge</title>
      <link>https://marcelosousa.net/talk/verified-3way-merge/</link>
      <pubDate>Fri, 09 Nov 2018 13:30:00 -0500</pubDate>
      
      <guid>https://marcelosousa.net/talk/verified-3way-merge/</guid>
      <description>&lt;p&gt;Even though many programmers rely on 3-way merge tools to integrate changes from different branches, such tools can introduce subtle bugs in the integration process. This paper aims to mitigate this problem by defining a semantic notion of conflict-freedom, which ensures that the merged program does not introduce new unwanted behaviors. We also show how to verify this property using a novel, compositional algorithm that combines lightweight summarization for shared program fragments with precise relational reasoning for the modifications. Towards this goal, our method uses a 4-way differencing algorithm on abstract syntax trees to represent different program versions as edits applied to a shared program with holes. This representation allows our verification algorithm to reason about different edits in isolation and compose them to obtain an overall proof of conflict freedom. We have implemented the proposed technique in a new tool called SafeMerge and evaluate it on 52 real-world merge scenarios obtained from Github. The experimental results demonstrate the benefits of our approach over syntactic conflict-freedom and indicate that SafeMerge is both precise and practical.&lt;/p&gt;

&lt;p&gt;Joint-work with Isil Dillig and Shuvendu Lahiri.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
